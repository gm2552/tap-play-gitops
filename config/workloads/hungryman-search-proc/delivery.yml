apiVersion: apps/v1
kind: Deployment
metadata:
  name: hungryman-search-proc
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
  labels:
    app.kubernetes.io/part-of: hungryman-search-proc
    apps.tanzu.vmware.com/workload-type: server
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: hungryman-search-proc
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: hungryman-search-proc
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: hungryman-search-proc
      conventions.apps.tanzu.vmware.com/framework: spring-boot
      networking.knative.dev/visibility: cluster-local
      services.conventions.apps.tanzu.vmware.com/rabbitmq: workload
      tanzu.app.live.view: "true"
      tanzu.app.live.view.application.actuator.port: "8081"
      tanzu.app.live.view.application.flavours: spring-boot
      tanzu.app.live.view.application.name: hungryman-search-proc
  template:
    metadata:
      annotations:
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 2.7.3
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/service-intent-rabbitmq
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"hungryman-search-proc","apps.tanzu.vmware.com/workload-type":"server","networking.knative.dev/visibility":"cluster-local"},"name":"hungryman-search-proc","namespace":"workloads"},"spec":{"env":[{"name":"spring_profiles_active","value":"crawler"}],"params":[{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"serviceClaims":[{"name":"rmq","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ResourceClaim","name":"rmq-hungryman"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/gm2552/hungryman.git"},"subPath":"hungryman-search-proc"}}}
        services.conventions.apps.tanzu.vmware.com/rabbitmq: amqp-client/5.14.2
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: hungryman-search-proc
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: hungryman-search-proc
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        networking.knative.dev/visibility: cluster-local
        services.conventions.apps.tanzu.vmware.com/rabbitmq: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: hungryman-search-proc
    spec:
      containers:
      - env:
        - name: spring_profiles_active
          value: crawler
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080"
        image: reg.perfect300rock.com/tapdev/supply-chain/hungryman-search-proc-workloads@sha256:af63f782039e08b92785e87b6286842a5c7c879be00fecbdcbd7d3b62917737e
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: hungryman-search-proc
  labels:
    app.kubernetes.io/part-of: hungryman-search-proc
    apps.tanzu.vmware.com/workload-type: server
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: hungryman-search-proc
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: hungryman-search-proc
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: hungryman-search-proc
    conventions.apps.tanzu.vmware.com/framework: spring-boot
    networking.knative.dev/visibility: cluster-local
    services.conventions.apps.tanzu.vmware.com/rabbitmq: workload
    tanzu.app.live.view: "true"
    tanzu.app.live.view.application.actuator.port: "8081"
    tanzu.app.live.view.application.flavours: spring-boot
    tanzu.app.live.view.application.name: hungryman-search-proc
  ports:
  - targetPort: 8080
    port: 8080
    name: "8080"
  - targetPort: 8080
    port: 80
    name: http

